Used for many to many minimum path, can handle graph with negative edges.
Use two dimensional array: int[][] last, to track the last node of the shortest path.
This is similar to bellman-ford and SPFA, except the relaxation is three dimensional. The underlying idea is to find a
third node k between two given nodes i, j, if dist[i][k]+dist[k][j]<dist[i][j], relax this path.

        for(int k=1; k<=N; k++) {
            for(int i=1; i<=N; i++) {
                for(int j=1; j<=N; j++) {
                    if(dist[i][k]<Integer.MAX_VALUE && dist[k][j]<Integer.MAX_VALUE && dist[i][k]+dist[k][j]<dist[i][j]) {
                        dist[i][j]=dist[i][k]+dist[k][j];
                        // last[i][j]=k;
                    }
                }
            }
        }

- 300 -
- 350 -
- 400 -
- 450 -
- 500 -
- 550 -
- 600 -
- 650 -
- 700 -
*Network Delay Time
- 750 -
- 800 -
- 850 -
- 900 -