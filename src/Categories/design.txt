LRU Cache
*Min Stack
LQTwoSumIIIDataStructureDesign
Binary Search Tree Iterator
Implement Trie (Prefix Tree)
Add and Search Word - Data structure design
Implement Stack using Queues
Implement Queue using Stacks
Implement Queue using Stacks
*LQEncodeAndDecodeStrings
LQZigzagIterator
Peeking Iterator
LQUniqueWordAbbreviation
*Find Median from Data Stream
- 300 -
*Flatten Nested List Iterator
LQMovingAverageFromDataStream
LQDesignTicTacToe
- 350 -
*LQDesignSnakeGame
Design Twitter
*LQLoggerRateLimiter
*LQDesignHitCounter
LQDesignPhoneDirectory
Insert Delete GetRandom O(1)
Insert Delete GetRandom O(1) - Duplicates allowed
- 400 -
LQEncodeNaryTreeToBinaryTree
*All O`one Data Structure
- 450 -
*LFU Cache
- 500 -
Encode and Decode TinyURL
- 550 -
LQDesignInMemoryFileSystem
- 600 -
LQDesignCompressedStringIterator
Design Circular Queue
LQDesignExcelSumFormula
LQDesignLogStorageSystem
Design Circular Deque
- 650 -
*LQDesignSearchAutocompleteSystem
- 700 -
*Design HashMap
Design Linked List
- 750 -
- 800 -
- 850 -
- 900 -