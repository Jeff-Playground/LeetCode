Used for one to many minimum path, note this can also handle graph with negative edges.
Optimized bellman-ford, iterate over the all the given edges to search and relax the minimum length to reach each node.
The difference is it uses a Queue to store current reached nodes, so the edge iteration can be more targeted.
Use one dimensional array: int[] last, to track the last node of the shortest path, because there's only one source, not
necessary to use two dimensional array.
Use one dimensional array: int[] count to store the times that each node is relaxed, if it's >N, then there's a negative
loop.

- 300 -
- 350 -
- 400 -
- 450 -
- 500 -
- 550 -
- 600 -
- 650 -
- 700 -
*Network Delay Time
- 750 -
*Cheapest Flights Within K Stops
- 800 -
- 850 -
- 900 -